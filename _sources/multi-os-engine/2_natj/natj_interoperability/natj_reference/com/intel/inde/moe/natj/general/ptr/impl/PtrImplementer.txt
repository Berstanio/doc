.. java:import:: java.util Collections

.. java:import:: java.util HashMap

.. java:import:: java.util Map

.. java:import:: com.intel.inde.moe.natj.c StructObject

.. java:import:: com.intel.inde.moe.natj.general.ann ReferenceInfo

.. java:import:: com.intel.inde.moe.natj.general.ptr BoolPtr

.. java:import:: com.intel.inde.moe.natj.general.ptr BytePtr

.. java:import:: com.intel.inde.moe.natj.general.ptr CharPtr

.. java:import:: com.intel.inde.moe.natj.general.ptr ConstBoolPtr

.. java:import:: com.intel.inde.moe.natj.general.ptr ConstBytePtr

.. java:import:: com.intel.inde.moe.natj.general.ptr ConstCharPtr

.. java:import:: com.intel.inde.moe.natj.general.ptr ConstDoublePtr

.. java:import:: com.intel.inde.moe.natj.general.ptr ConstFloatPtr

.. java:import:: com.intel.inde.moe.natj.general.ptr ConstIntPtr

.. java:import:: com.intel.inde.moe.natj.general.ptr ConstLongPtr

.. java:import:: com.intel.inde.moe.natj.general.ptr ConstNFloatPtr

.. java:import:: com.intel.inde.moe.natj.general.ptr ConstNIntPtr

.. java:import:: com.intel.inde.moe.natj.general.ptr ConstNUIntPtr

.. java:import:: com.intel.inde.moe.natj.general.ptr ConstShortPtr

.. java:import:: com.intel.inde.moe.natj.general.ptr ConstVoidPtr

.. java:import:: com.intel.inde.moe.natj.general.ptr DoublePtr

.. java:import:: com.intel.inde.moe.natj.general.ptr FloatPtr

.. java:import:: com.intel.inde.moe.natj.general.ptr IntPtr

.. java:import:: com.intel.inde.moe.natj.general.ptr LongPtr

.. java:import:: com.intel.inde.moe.natj.general.ptr NFloatPtr

.. java:import:: com.intel.inde.moe.natj.general.ptr NIntPtr

.. java:import:: com.intel.inde.moe.natj.general.ptr NUIntPtr

.. java:import:: com.intel.inde.moe.natj.general.ptr ShortPtr

.. java:import:: com.intel.inde.moe.natj.general.ptr VoidPtr

.. java:import:: com.intel.inde.moe.natj.objc ObjCObject

PtrImplementer
==============

.. java:package:: com.intel.inde.moe.natj.general.ptr.impl
   :noindex:

.. java:type:: public class PtrImplementer

Fields
------
pimitivePtrTypeMap
^^^^^^^^^^^^^^^^^^

.. java:field:: public static final Map<Class<?>, Class<?>> pimitivePtrTypeMap
   :outertype: PtrImplementer

Methods
-------
getImplementer
^^^^^^^^^^^^^^

.. java:method:: public static final Class<?> getImplementer(ReferenceInfo info, boolean isConst)
   :outertype: PtrImplementer

   Returns implementation for the given reference kind.

   :param info: Reference info
   :param isConst: Is Constant pointer
   :return: Class of pointer implementation

